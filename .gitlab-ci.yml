image: docker:20.10.3
services:
- docker:20.10.3-dind
variables:
  PROJECT: $CI_PROJECT_NAME
before_script:
- apk add make
- docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
- |
  if [ -n "${CI_COMMIT_TAG}" ] ; then
    # If this build is from a git tag, use that as the docker tag.
    export TAG_SPECIFIC="${CI_COMMIT_TAG}"
  else
    # If this build is from a branch, use the name and sha as the
    # docker tag.
    export TAG_SPECIFIC="${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHORT_SHA}"
    # Build both a commit-specific build and a branch-latest build.
    export TAG_LATEST="${CI_COMMIT_REF_NAME}-latest"
  fi

stages:
  - test
  - build

test:
  stage: test
  image: golang:1.15.8-buster
  before_script:
  - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/".insteadOf "https://gitlab.com/"
  - go get golang.org/x/lint/golint
  script: make check

build:
  stage: build
  script:
  - make SUFFIX=${TAG_SPECIFIC} GITLAB_AUTHN=gitlab-ci-token:${CI_JOB_TOKEN} manifest install

  artifacts:
    paths:
      - config
      - deploy/*.yaml
